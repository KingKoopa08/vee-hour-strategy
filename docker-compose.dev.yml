version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: trading-db-dev
    environment:
      POSTGRES_DB: trading_analysis
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: trading_secure_pass_2024
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - trading-network

  redis:
    image: redis:7-alpine
    container_name: trading-cache-dev
    ports:
      - "6379:6379"
    networks:
      - trading-network

  backend:
    image: node:18-alpine
    container_name: trading-backend-dev
    working_dir: /app
    volumes:
      - ./backend:/app
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://trader:trading_secure_pass_2024@postgres:5432/trading_analysis
      REDIS_URL: redis://redis:6379
      POLYGON_API_KEY: AhYeb0tc72ti39yZpxdNpoZx6_CD9IYW
      PORT: 3001
      WS_PORT: 3002
    ports:
      - "3001:3001"
      - "3002:3002"
    depends_on:
      - postgres
      - redis
    networks:
      - trading-network
    command: sh -c "npm install && npm run dev"

  frontend:
    image: node:18-alpine
    container_name: trading-frontend-dev
    working_dir: /app
    volumes:
      - ./frontend:/app
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:3002
      PORT: 3010
      HOSTNAME: 0.0.0.0
    ports:
      - "3010:3010"
    depends_on:
      - backend
    networks:
      - trading-network
    command: sh -c "npm install && npm run dev -- -p 3010 -H 0.0.0.0"

networks:
  trading-network:
    driver: bridge